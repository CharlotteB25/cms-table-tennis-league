<!DOCTYPE html>
<html lang="nl">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Drankjes – POS</title>
    <link
      rel="icon"
      type="image/x-icon"
      href="{{ siteUrl('uploads/favicon/favicon.ico') }}"
    />

    <style>
      :root {
        --cream: #fdfaf6;
        --soft-red: #d9534f;
        --soft-red-dark: #b52e2a;
        --text: #333;
        --muted: #6b6b6b;
        --card: #ffffff;
        --ring: #e9e9e9;
        --shadow: 0 4px 10px rgba(0, 0, 0, 0.06);
        --tint: #fff7f5;
        --bg-gradient-start: #fdfaf6;
        --bg-gradient-end: #fff4f2;
        --purple-700: #5e548e;

        /* height reserved for header/nav + panel header + padding.
           tweak this (220–280px) to fit your layout precisely */
        --drinks-offset: 260px; /* FIXED: use a variable for easier tuning */
      }

      html {
        background-color: var(--bg-gradient-start);
      }
      body {
        margin: 0;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        font-family: Arial, sans-serif;
        color: var(--text);

        /* 3 background layers: wave, radial tint, base gradient */
        background-image: url("data:image/svg+xml,%3Csvg width='800' height='600' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 100 Q400 200 800 100 T1600 100 V600 H0 Z' fill='%235e548e' opacity='0.06'/%3E%3C/svg%3E"),
          radial-gradient(
            1200px 700px at 110% -10%,
            color-mix(in oklab, var(--purple-700) 14%, transparent),
            transparent 60%
          ),
          linear-gradient(
            160deg,
            var(--bg-gradient-start),
            var(--bg-gradient-end)
          );

        /* wave repeats horizontally at the top; the other layers don’t repeat */
        background-repeat: repeat-x, no-repeat, no-repeat;

        /* position wave at the top center; keep your existing positions for others */
        background-position: top center, center, center;

        /* give the wave extra height; others use default */
        background-size: auto 140%, auto, auto;

        /* fixed for all three layers so the wave feels anchored */
        background-attachment: fixed, fixed, fixed;

        position: relative;
        isolation: isolate; /* harmless to keep */
        overflow-x: hidden;
      }

      body::before {
        content: "";
        position: fixed;
        inset: -10% -5% auto -5%;
        height: 140%;
        background: url("data:image/svg+xml,%3Csvg width='800' height='600' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 100 Q400 200 800 100 T1600 100 V600 H0 Z' fill='%235e548e' opacity='0.06'/%3E%3C/svg%3E")
          repeat-x center/cover;
        pointer-events: none;

        z-index: -1;
      }

      main {
        position: relative;
        z-index: 0; /* content sits above -1 wave */
        padding-inline: 20px;
      }

      .pos-grid {
        display: grid;
        grid-template-columns: minmax(340px, 1.4fr) minmax(280px, 1fr);
        gap: 1.5rem;
        align-items: start;
        margin: 1rem;
      }

      .panel {
        border-radius: 16px;
        border: 1px solid var(--ring);
        box-shadow: 0 10px 24px rgba(17, 12, 38, 0.08),
          0 2px 10px rgba(0, 0, 0, 0.05);
      }
      .panel-header {
        color: var(--soft-red-dark);
        font-weight: 800;
        padding: 12px 16px;
        background: linear-gradient(0deg, #fff0, #ffffff88), var(--tint);
        backdrop-filter: saturate(110%) blur(2px);
        border-bottom: 1px solid var(--ring);
      }
      .panel-body {
        padding: 12px 16px;
      }

      /* toolbar stays at top of the INNER scroller */
      .tools {
        position: sticky;
        top: 0;
        z-index: 2;
        background: linear-gradient(180deg, #fff, #fff0);
        padding-block: 8px 6px;
        margin-bottom: 10px;
      }
      .input {
        border: 1px solid var(--ring);
        border-radius: 8px;
        padding: 10px 12px;
        background: #fff;
      }

      /* The ONLY scrollable area for drinks (wrapper around tools + grid) */
      .drinks-scroll {
        /* FIXED: this is the scroller */
        max-height: calc(100vh - var(--drinks-offset));
        overflow: auto;
        padding-right: 6px;
        scrollbar-gutter: stable both-edges;
      }

      .drinks-list {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
        gap: 14px;
        overflow: visible; /* grid itself doesn’t scroll; wrapper does */
      }

      .drink-card {
        position: relative;
        display: grid;
        grid-template-rows: auto auto 1fr auto;
        gap: 8px;
        padding: 12px;
        border-radius: 14px;
        background: var(--card);
        border: 1px solid var(--ring);
        box-shadow: 0 8px 18px rgba(17, 12, 38, 0.06),
          0 2px 6px rgba(0, 0, 0, 0.04);
        isolation: isolate;
        transition: transform 0.18s, box-shadow 0.18s, border-color 0.18s;
      }
      .drink-card::before {
        content: "";
        position: absolute;
        inset: 0;
        border-radius: 14px;
        padding: 1px;
        background: linear-gradient(
          180deg,
          color-mix(in oklab, var(--purple-700) 26%, #fff),
          color-mix(in oklab, var(--purple-700) 8%, #fff)
        );
        -webkit-mask: linear-gradient(#000 0 0) content-box,
          linear-gradient(#000 0 0);
        -webkit-mask-composite: xor;
        mask-composite: exclude;
        pointer-events: none;
      }
      .drink-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 14px 28px rgba(17, 12, 38, 0.11),
          0 8px 16px rgba(0, 0, 0, 0.06);
        border-color: color-mix(in oklab, var(--purple-700) 18%, var(--ring));
      }

      .thumb-wrap {
        position: relative;
        border-radius: 12px;
        overflow: hidden;
        aspect-ratio: 4/3;
        background: #f6f6f6;
        border: 1px solid #eee;
      }
      .thumb {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
      }

      .dname {
        margin: 0;
        font-weight: 700;
        color: var(--soft-red-dark);
        font-size: 1rem;
      }
      .dmeta {
        margin: 2px 0 0;
        color: var(--muted);
        font-size: 0.9rem;
      }
      .meta-row {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 8px;
        margin-top: 4px;
      }
      .price {
        color: var(--soft-red-dark);
        font-weight: 800;
        font-size: 1rem;
        white-space: nowrap;
      }
      .badge {
        position: absolute;
        top: 8px;
        left: 8px;
        padding: 4px 8px;
        border-radius: 999px;
        font-size: 12px;
        font-weight: 700;
        background: #fff;
        border: 1px solid var(--ring);
        color: var(--muted);
      }
      .badge.unavailable {
        background: color-mix(in oklab, var(--soft-red) 15%, #fff);
        color: var(--soft-red-dark);
        border-color: color-mix(in oklab, var(--soft-red) 30%, var(--ring));
      }

      .btn {
        appearance: none;
        border-radius: 10px;
        padding: 10px 12px;
        font-weight: 800;
        cursor: pointer;
        transition: background 0.15s, color 0.15s, border-color 0.15s,
          transform 0.1s;
      }
      .btn-add {
        background: var(--soft-red);
        color: var(--cream);
        border: 2px solid var(--soft-red);
      }
      .btn-add:hover {
        background: var(--soft-red-dark);
        border-color: var(--soft-red-dark);
        transform: translateY(-1px);
      }
      .btn-outline {
        background: #fff;
        color: var(--soft-red);
        border: 2px solid var(--soft-red);
      }
      .btn-outline:hover {
        background: var(--soft-red);
        color: var(--cream);
      }

      .cart {
        position: sticky;
        top: 0.75rem;
      }
      .cart-items {
        display: flex;
        flex-direction: column;
        gap: 8px;
      }
      .cart-row {
        display: grid;
        grid-template-columns: 1fr auto;
        gap: 10px;
        align-items: center;
        border: 1px solid var(--ring);
        border-radius: 10px;
        padding: 10px 12px;
        background: #fff;
      }
      .qty {
        display: inline-grid;
        grid-auto-flow: column;
        gap: 6px;
        align-items: center;
      }
      .qty .qbtn {
        width: 28px;
        height: 28px;
        border-radius: 6px;
        border: 2px solid var(--soft-red);
        background: #fff;
        color: var(--soft-red);
        font-weight: 900;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .qty .qbtn:hover {
        background: var(--soft-red);
        color: var(--cream);
      }
      .line {
        color: var(--muted);
        font-size: 0.92rem;
      }
      .line strong {
        color: var(--soft-red-dark);
      }

      .cart-footer {
        border-top: 1px solid var(--ring);
        margin-top: 12px;
        padding-top: 12px;
        display: grid;
        gap: 10px;
      }
      .total {
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-weight: 800;
        color: var(--soft-red-dark);
      }
      .cta-row {
        display: grid;
        grid-template-columns: 1fr;
        gap: 10px;
      }
      .btn-pay {
        background: var(--soft-red);
        color: var(--cream);
        border: 2px solid var(--soft-red);
        justify-self: start;
      }
      .btn-pay:hover {
        background: var(--soft-red-dark);
        border-color: var(--soft-red-dark);
      }

      .notice {
        background: var(--soft-red);
        color: var(--cream);
        padding: 10px 14px;
        border-radius: 10px;
        border: 1px solid var(--soft-red-dark);
        box-shadow: var(--shadow);
        position: fixed;
        top: 14px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1000;
        opacity: 0;
        transition: opacity 0.3s;
        font-weight: 600;
      }
      .notice.hidden {
        display: none;
      }

      @media (max-width: 1000px) {
        .pos-grid {
          grid-template-columns: 1fr;
        }
        .cart {
          position: static;
        }
        .drinks-scroll {
          max-height: none;
          overflow: visible;
        } /* let page scroll on small screens */
      }
      @media (max-width: 700px) {
        main {
          padding: 1.25rem;
        }
      }
    </style>
  </head>
  <body>
    <main>
      {% include 'global/nav.twig' %} {% include 'global/header.twig' %}

      <div class="pos-grid">
        <!-- LEFT: Drinks -->
        <section class="panel">
          <div class="panel-header">
            <span>Drankjes</span>
          </div>

          <div class="panel-body">
            <!-- FIXED: proper wrapper + closed tag -->
            <div class="drinks-scroll">
              <div class="tools">
                <input
                  id="search"
                  class="input"
                  type="text"
                  placeholder="Zoek drankjes…"
                />
                <select id="filterCat" class="input">
                  <option value="">Alle categorieën</option>
                  <option value="bier">Bier</option>
                  <option value="wijn">Wijn</option>
                  <option value="fris">Fris</option>
                </select>

                {% if currentUser and currentUser.admin %}
                <a
                  class="btn btn-outline"
                  href="{{ cpUrl('entries/drinks/new') }}"
                  target="_blank"
                  rel="noopener"
                  title="Nieuw drankje in het CMS toevoegen"
                  >+ Nieuw drankje</a
                >
                {% endif %}
              </div>

              <!-- FIXED: drinks grid lives inside the scroll container -->
              <div id="drinksList" class="drinks-list">
                {% for drink in craft.entries.section('drinks').all() %} {% set
                img = drink.image.one() %} {% set catLabel = drink.category ?
                (drink.category.label ?? drink.category.value) : '—' %} {% set
                priceMoney = drink.price ?? null %} {% set priceNumber =
                priceMoney ? (priceMoney.getAmount() / 100) : 0 %} {% set
                priceDisplay = priceMoney ?
                craft.app.formatter.asCurrency(priceNumber,
                priceMoney.getCurrency().getCode()) : '—' %}

                <article
                  class="drink-card"
                  data-name="{{ drink.title | lower }}"
                  data-cat="{{ catLabel | lower }}"
                  data-visible="{{ drink.drinkVisibility ? '1' : '0' }}"
                  data-id="{{ drink.id }}"
                  data-price="{{ priceNumber }}"
                  data-title="{{ drink.title }}"
                >
                  <div class="thumb-wrap">
                    <img
                      class="thumb"
                      src="{{
                        img
                          ? img.getUrl()
                          : 'https://via.placeholder.com/400x300?text=Drink'
                      }}"
                      alt="{{ drink.title }}"
                      loading="lazy"
                      decoding="async"
                    />
                    {% if not drink.drinkVisibility %}
                    <span class="badge unavailable">Niet beschikbaar</span>
                    {% endif %}
                  </div>
                  <div>
                    <h3 class="dname">{{ drink.title }}</h3>
                    <p class="dmeta">Categorie: {{ catLabel }}</p>
                  </div>
                  <div class="meta-row">
                    <span class="price">{{ priceDisplay }}</span>
                    {% if currentUser and drink.drinkVisibility %}
                    <button
                      class="btn btn-add add-btn"
                      aria-label="Toevoegen {{ drink.title }}"
                    >
                      Toevoegen
                    </button>
                    {% elseif currentUser %}
                    <button class="btn btn-outline" disabled>
                      Niet beschikbaar
                    </button>
                    {% else %}
                    <a class="btn btn-outline" href="{{ url('login') }}"
                      >Login</a
                    >
                    {% endif %}
                  </div>
                </article>
                {% else %}
                <p class="dmeta">Geen drankjes beschikbaar.</p>
                {% endfor %}
              </div>
            </div>
          </div>
        </section>

        <!-- RIGHT: Selection -->
        <aside class="panel cart">
          <div class="panel-header">Jouw selectie</div>
          <div class="panel-body">
            <div id="cartItems" class="cart-items"></div>

            <div class="cart-footer">
              <div class="total">
                <span>Totaal</span>
                <span id="cartTotal">€ 0,00</span>
              </div>
              <div class="cta-row">
                <a class="btn btn-pay" href="{{ url('tabs') }}">Afrekenen</a>
              </div>
              <p class="dmeta" style="margin: 6px 0 0">
                Items worden direct toegevoegd aan je rekening. Beheer en betaal
                op de
                <a
                  href="{{ url('tabs') }}"
                  style="
                    color: var(--soft-red);
                    font-weight: 700;
                    text-decoration: none;
                  "
                  >rekeningpagina</a
                >.
              </p>
            </div>
          </div>
        </aside>
      </div>
    </main>

    <div
      id="notice"
      class="notice hidden"
      role="status"
      aria-live="polite"
    ></div>

    {% include 'global/footer.twig' %} {% if currentUser %}
    <script>
      // CSRF + endpoints
      const CSRF_NAME  = '{{ craft.app.config.general.csrfTokenName }}';
      const CSRF_VALUE = '{{ craft.app.request.csrfToken|e('js') }}';
      const ADD_TO_TAB_URL = '{{ actionUrl("tabs/add") }}';
      const REMOVE_FROM_TAB_URL = '{{ actionUrl("tabs/remove") }}'; // optional

      const fmt = new Intl.NumberFormat('nl-BE', { style:'currency', currency:'EUR' });

      const noticeEl = document.getElementById('notice');
      function toast(msg){
        noticeEl.textContent = msg;
        noticeEl.classList.remove('hidden');
        requestAnimationFrame(()=> noticeEl.style.opacity = 1);
        setTimeout(()=>{ noticeEl.style.opacity = 0; noticeEl.classList.add('hidden'); }, 1800);
      }

      // Local cart view
      const cart = new Map(); // id -> { id, title, price, qty }
      const CART_KEY = 'pos_cart_local_v1';
      try {
        const saved = JSON.parse(localStorage.getItem(CART_KEY)||'[]');
        saved.forEach(it => cart.set(String(it.id), it));
      } catch(_) {}

      function saveCart(){
        localStorage.setItem(CART_KEY, JSON.stringify([...cart.values()]));
      }

      const cartItemsEl = document.getElementById('cartItems');
      const totalEl = document.getElementById('cartTotal');

      function renderCart(){
        cartItemsEl.innerHTML = '';
        let total = 0;
        for (const item of cart.values()){
          total += item.price * item.qty;
          const row = document.createElement('div');
          row.className = 'cart-row';
          row.innerHTML = `
            <div class="line"><strong>${item.title}</strong><br><span>${fmt.format(item.price)} × ${item.qty}</span></div>
            <div class="qty">
              <button class="qbtn" data-action="dec" data-id="${item.id}">−</button>
              <button class="qbtn" data-action="inc" data-id="${item.id}">＋</button>
            </div>
          `;
          cartItemsEl.appendChild(row);
        }
        if (cart.size === 0){
          cartItemsEl.innerHTML = '<p class="dmeta">Nog geen items. Voeg links drankjes toe.</p>';
        }
        totalEl.textContent = fmt.format(total);
        saveCart();
      }

      async function addOne(id, title, price){
        // local
        const cur = cart.get(id) || { id, title, price, qty: 0 };
        cur.qty += 1; cart.set(id, cur); renderCart();

        // server
        const body = new URLSearchParams();
        body.append('drinkId', id);
        body.append('qty', '1');
        body.append(CSRF_NAME, CSRF_VALUE);
        try{
          const res = await fetch(ADD_TO_TAB_URL, {
            method:'POST',
            headers:{ 'Accept':'application/json','Content-Type':'application/x-www-form-urlencoded' },
            body: body.toString()
          });
          if(!res.ok){ console.error('Add failed', res.status, await res.text()); toast('Kon niet toevoegen.'); return; }
          const json = await res.json().catch(()=>({}));
          if(json && json.success){
            toast(json.merged ? 'Aantal verhoogd!' : 'Toegevoegd aan je rekening!');
          } else {
            toast('Onbekend antwoord van server.');
          }
        }catch(e){ console.error(e); toast('Netwerkfout bij toevoegen.'); }
      }

      // Add buttons
      document.querySelectorAll('.add-btn').forEach(btn=>{
        btn.addEventListener('click', ()=>{
          const card = btn.closest('.drink-card');
          const id = card.dataset.id;
          const price = parseFloat(card.dataset.price||'0');
          const title = card.dataset.title;
          addOne(id, title, price);
        });
      });

      // Qty inc/dec in cart
      cartItemsEl.addEventListener('click', async (e)=>{
        const b = e.target.closest('.qbtn'); if(!b) return;
        const id = b.dataset.id; const action = b.dataset.action;
        const item = cart.get(id); if(!item) return;

        if(action === 'inc'){
          await addOne(id, item.title, item.price);
        } else {
          item.qty -= 1;
          if(item.qty <= 0) cart.delete(id); else cart.set(id, item);
          renderCart();

          if(REMOVE_FROM_TAB_URL){
            const body = new URLSearchParams();
            body.append('drinkId', id);
            body.append('qty', '1');
            body.append(CSRF_NAME, CSRF_VALUE);
            try{
              const res = await fetch(REMOVE_FROM_TAB_URL, {
                method:'POST',
                headers:{ 'Accept':'application/json','Content-Type':'application/x-www-form-urlencoded' },
                body: body.toString()
              });
              if(!res.ok) console.warn('Remove endpoint not ready? HTTP', res.status);
            }catch(e){ console.warn('Dec network error', e); }
          }
        }
      });

      // Search & filter
      const searchEl = document.getElementById('search');
      const filterCatEl = document.getElementById('filterCat');
      function applyFilters(){
        const term = (searchEl.value||'').trim().toLowerCase();
        const cat = (filterCatEl.value||'').trim().toLowerCase();
        document.querySelectorAll('.drink-card').forEach(card=>{
          const matchName = card.dataset.name.includes(term);
          const matchCat  = !cat || card.dataset.cat === cat;
          const visible   = card.dataset.visible === '1';
          card.style.display = (matchName && matchCat && visible) ? '' : 'none';
        });
      }
      searchEl.addEventListener('input', applyFilters);
      filterCatEl.addEventListener('change', applyFilters);
      applyFilters();

      renderCart();
    </script>
    {% endif %}
  </body>
</html>
