{% set actionTrigger = craft.app.config.general.actionTrigger ?? 'actions' %} {#
--- USER TABS PAGE (tabs/index.twig) --- #} {% set user = currentUser %} {% if
not user %}
<p class="tabs-empty">Je moet ingelogd zijn om je tabs te bekijken.</p>
{% else %}

<h2 class="tabs-title">Mijn Tabs</h2>

{% set myTabs =
craft.entries.section('tabs').tabOwner(user).with(['items.drink']).orderBy('postDate
desc').all() %} {% if myTabs|length %}
<div class="tabs-card">
  <table class="tabs-table">
    <thead>
      <tr>
        <th>Status</th>
        <th>Items</th>
        <th>Totaal</th>
        <th>Acties</th>
      </tr>
    </thead>
    <tbody>
      {% for tab in myTabs %} {% set total = 0 %}
      <tr data-tab-id="{{ tab.id }}">
        <td data-label="Status">
          {% set status = tab.tabStatus ?? '—' %} {% if status == 'open' %}
          <span class="status-chip chip-open">Open</span>
          {% elseif status == 'paid' %}
          <span class="status-chip chip-paid">Betaald</span>
          {% else %}
          <span class="status-chip">{{ status }}</span>
          {% endif %} {# hidden marker for polling this tab’s status #}
          <span
            class="js-tab-status"
            data-tab-id="{{ tab.id }}"
            data-status="{{ tab.tabStatus ?? 'open' }}"
            style="display: none"
          ></span>
        </td>

        <td data-label="Items">
          <ul class="tabs-items">
            {% for b in tab.items.all() %} {% set qty = b.qty ?? 0 %} {% set
            priceMoney = (b.price is defined and attribute(b.price,'getAmount')
            is defined) ? b.price : (b.drink.one() and b.drink.one().price is
            defined and attribute(b.drink.one().price,'getAmount') is defined ?
            b.drink.one().price : null) %} {% set priceNumber = priceMoney ?
            (priceMoney.getAmount() / 100) : (b.price ?? 0)|float %} {% set line
            = qty * priceNumber %} {% set total = total + line %}
            <li>
              {{ b.title ?: (b.drink.one() ? b.drink.one().title : '—') }}
              × {{ qty }} —
              {{ craft.app.formatter.asCurrency(priceNumber, "EUR") }}
            </li>
            {% endfor %}
          </ul>
        </td>

        {% set totalFormatted = craft.app.formatter.asCurrency(total, "EUR") %}
        <td data-label="Totaal" class="tabs-total">{{ totalFormatted }}</td>

        <td data-label="Acties">
          {% if (tab.tabStatus ?? null) == 'open' %}
          <div class="tabs-actions">
            {# Cash -> close immediately (relative path so it works on ngrok) #}
            <form method="post" action="/tab/close">
              {{ csrfInput() }}
              <input type="hidden" name="tabId" value="{{ tab.id }}" />
              <button type="submit" class="btn">Cash</button>
            </form>

            {# Online -> QR + Mollie checkout #}
            <button
              type="button"
              class="btn btn-primary"
              data-online-pay="{{ tab.id }}"
            >
              Online betalen
            </button>
          </div>
          {% else %} — {% endif %}
        </td>
      </tr>
      {% endfor %}
    </tbody>
  </table>
</div>
{% else %}
<p class="tabs-empty">Je hebt nog geen tabs.</p>
{% endif %} {% endif %} {# ---- ONE-TIME MODAL + SCRIPT (place once at bottom of
the template) ---- #}
<div
  id="pay-modal"
  style="
    display: none;
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1000;
  "
>
  <div
    style="
      max-width: 420px;
      margin: 10vh auto;
      background: #fff;
      padding: 20px;
      border-radius: 12px;
      text-align: center;
    "
  >
    <h3 style="margin-top: 0">Scan & betaal</h3>
    <div id="qr" style="margin: 12px auto"></div>
    <p>
      <a
        id="open-checkout"
        class="btn btn-primary"
        target="_blank"
        rel="noopener"
        >Open betaalscherm</a
      >
    </p>
    <p style="color: #6b7280; font-size: 14px">
      Na betaling sluiten we je tab automatisch.
    </p>
    <button
      type="button"
      class="btn"
      onclick="document.getElementById('pay-modal').style.display='none'"
    >
      Sluiten
    </button>
  </div>
</div>

<script
  src="https://cdn.jsdelivr.net/npm/qrcode@1.5.3/build/qrcode.min.js"
  defer
></script>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    async function startOnlinePay(tabId) {
      // RELATIVE path so it posts to the current host (ngrok or local)
      const res = await fetch("/tab/pay", {
        method: "POST",
        headers: {
          "Content-Type": "application/x-www-form-urlencoded",
          "X-CSRF-Token": "{{ craft.app.request.csrfToken }}",
        },
        body: new URLSearchParams({ tabId }),
      });
      let data;
      try {
        data = await res.json();
      } catch (e) {}
      if (!data || !data.ok || !data.checkoutUrl) {
        alert("Kon betaling niet starten.");
        return;
      }

      // Show QR + link
      const modal = document.getElementById("pay-modal");
      const qrBox = document.getElementById("qr");
      qrBox.innerHTML = "";
      if (window.QRCode && window.QRCode.toCanvas) {
        window.QRCode.toCanvas(
          data.checkoutUrl,
          { width: 256 },
          (err, canvas) => {
            if (!err && canvas) qrBox.appendChild(canvas);
          }
        );
      }
      document.getElementById("open-checkout").href = data.checkoutUrl;
      modal.style.display = "block";

      // Poll page HTML for this tab’s status; reload when paid
      let tries = 0;
      const t = setInterval(async () => {
        tries++;
        const r = await fetch(window.location.href, { cache: "no-store" });
        const html = await r.text();
        const marker = new RegExp(
          'class="js-tab-status"[^>]*data-tab-id="' +
            tabId +
            '"[^>]*data-status="([^"]+)"',
          "i"
        ).exec(html);
        const status = marker ? (marker[1] || "").toLowerCase() : null;
        const stillListed = html.indexOf('data-tab-id="' + tabId + '"') !== -1;

        if (status === "paid" || (!stillListed && tries >= 2) || tries > 200) {
          clearInterval(t);
          modal.style.display = "none";
          location.reload();
        }
      }, 3000);
    }

    document.querySelectorAll("[data-online-pay]").forEach((btn) => {
      btn.addEventListener("click", (e) => {
        e.preventDefault();
        startOnlinePay(btn.getAttribute("data-online-pay"));
      });
    });
  });
</script>
